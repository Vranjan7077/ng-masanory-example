{"version":3,"sources":["./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/environments/environment.ts","./src/app/shared/images/images.component.ts","./src/app/shared/images/images.component.html","./src/app/service/image.service.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/component.module.ts","./src/app/core/core.module.ts","./src/app/app-routing.module.ts","./src/app/component/random-images/random-images.component.html","./src/app/component/random-images/random-images.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/component/gallery/gallery.component.ts","./src/app/component/gallery/gallery.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<Header class=\"header\">\n  <h1 class=\"header__title\"><img src=\"../../../assets/img/logo.png\" /></h1>\n  <p class=\"header__subtitle\">The internetâ€™s source of freely usable images.</p>\n  <p class=\"header__subtitle\">Powered by creators everywhere.</p>\n</Header>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api:\"mId7crrR2v5C0NQi-yzIq8XMY5g9tTKN02-ix0cH0FE\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NgxMasonryOptions, NgxMasonryComponent } from 'ngx-masonry';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styleUrls: ['./images.component.scss'],\n})\nexport class ImagesComponent implements OnInit {\n  @Input() photodata: any;\n  // @Input()  searchQuery: String[]=[];\n  // @Input() searchImagesData: any;\n\n  @ViewChild(NgxMasonryComponent) masonry!: NgxMasonryComponent;\n\n  public masonryOptions: NgxMasonryOptions = {\n    gutter: 35,\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  itemsLoaded() {\n    console.log('itemsloaded');\n  }\n}\n","<div class=\"image-section\">\n  <ngx-masonry\n    class=\"image-container\"\n    [options]=\"masonryOptions\"\n    [ordered]=\"true\"\n    (itemsLoaded)=\"itemsLoaded()\"\n  >\n    <div\n      ngxMasonryItem\n      *ngFor=\"let d of photodata\"\n      class=\"image-container__items\"\n    >\n      <img [src]=\"d.urls.regular\" />\n    </div>\n  </ngx-masonry>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { Photo } from '../model/photo';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageService {\n  private Api_key = environment.api;\n  private Base_Url = 'https://api.unsplash.com/';\n\n  constructor(private _http: HttpClient) {}\n\n  getImage(page: any): Observable<Photo> {\n    return this._http\n      .get<Photo>(\n        `${this.Base_Url}/photos/?page=${page}&client_id=${this.Api_key}`\n      )\n      .pipe(catchError(this.errorHandler));\n  }\n\n  searchPhotos(query: any, page: any): Observable<Photo> {\n    return this._http\n      .get<Photo>(\n        `${this.Base_Url}/search/photos/?query=${query}&page=${page}&client_id=${this.Api_key}`\n      )\n      .pipe(catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImagesComponent } from './images/images.component';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { FormsModule } from '@angular/forms';\n// import { InfiniteScrollModule } from 'ngx-infinite-scroll';\n@NgModule({\n  declarations: [\n    ImagesComponent\n  ],\n  imports: [\n    CommonModule,\n    NgxMasonryModule,\n    FormsModule\n  ],\n  exports: [ImagesComponent],\n})\nexport class SharedModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-images-masonry';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ComponentModule } from './component/component.module';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ImageService } from './service/image.service';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    ComponentModule,\n    BrowserAnimationsModule,\n    CoreModule\n  ],\n  providers: [ImageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { RandomImagesComponent } from './random-images/random-images.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\n@NgModule({\n  declarations: [\n    GalleryComponent,\n    RandomImagesComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    SharedModule,\n    RouterModule,\n    FormsModule,\n    NgxMasonryModule,\n    InfiniteScrollModule\n  ]\n})\nexport class ComponentModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\n\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports:[\n    HeaderComponent\n  ]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GalleryComponent } from './component/gallery/gallery.component';\nimport { RandomImagesComponent } from './component/random-images/random-images.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'gallery', pathMatch: 'full' },\n  { path: 'gallery', component: GalleryComponent },\n  { path: 'random', component: RandomImagesComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<div action=\"\" class=\"search\">\n  <input\n    class=\"search__input\"\n    (keyup)=\"keyUp($event)\"\n    type=\"text\"\n    placeholder=\"Search Random Images\"\n    id=\"search\"\n    [(ngModel)]=\"searchInputQuery\"\n    autocomplete=\"off\"\n  />\n</div>\n<div\n  (click)=\"displayitems = []; searchImagesData(searchInputQuery, 1)\"\n></div>\n\n<div class=\"image-section\">\n  <ngx-masonry\n    class=\"image-container\"\n    [options]=\"masonryOptions\"\n    [ordered]=\"true\"\n  >\n    <div\n      ngxMasonryItem\n      *ngFor=\"let photo of displayitems\"\n      class=\"image-container__items\"\n    >\n      <img [src]=\"photo.urls.small\" />\n    </div>\n  </ngx-masonry>\n</div>\n<div *ngIf=\"loader\" style=\"text-align: center\">Loading....</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgxMasonryOptions } from 'ngx-masonry';\nimport { ImageService } from 'src/app/service/image.service';\n\n@Component({\n  selector: 'app-random-images',\n  templateUrl: './random-images.component.html',\n  styleUrls: ['./random-images.component.scss'],\n})\nexport class RandomImagesComponent implements OnInit {\n  loader!: Boolean;\n  eventValue: Boolean = true;\n  displayitems: any = [];\n  searchInputQuery: String[] = [];\n\n\n  constructor(private imageService: ImageService) {}\n\n  public masonryOptions: NgxMasonryOptions = {\n    gutter: 35,\n  };\n  ngOnInit(): void {}\n\n  searchImagesData(query: any, page: any) {\n    this.loader = true;\n    this.imageService.searchPhotos(query, page).subscribe(\n      (res: any) => {\n        let itemsProcessed = 0;\n        if (res.results.length == 0) {\n          this.loader = false;\n        } else {\n          res.results.forEach((e: any) => {\n            this.displayitems.push(e);\n            itemsProcessed++;\n            if (itemsProcessed === res.results.length) {\n              this.eventValue = true;\n              this.loader = false;\n            }\n          });\n        }\n      },\n      (err) => {\n        this.loader = false;\n        console.log(err);\n        console.log('sorry!....');\n      }\n    );\n  }\n\n  keyUp(e: any) {\n    if (e.keyCode == 13) {\n      this.displayitems = [];\n      this.searchImagesData(this.searchInputQuery, 1);\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Photo } from 'src/app/model/photo';\nimport { ImageService } from 'src/app/service/image.service';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.scss'],\n})\nexport class GalleryComponent implements OnInit, OnDestroy {\n  setImages: Subscription[] = [];\n  displayitems: Photo[] | any[] = [];\n  loader!: Boolean;\n  eventValue: Boolean = true;\n  page = 1;\n  constructor(private imageService: ImageService) {}\n\n  ngOnInit(): void {\n    this.fetchImagesData(1);\n  }\n\n  fetchImagesData(page: number) {\n    this.setImages.push(\n      this.imageService.getImage(page).subscribe(\n        (res: any) => {\n          if (res.length == 0) {\n            this.loader = false;\n          } else {\n            let processesPhotos = 0;\n            res.forEach((e: any) => {\n              this.displayitems.push(e);\n              processesPhotos++;\n              console.log(e);\n              if (processesPhotos === res.length) {\n                this.eventValue = true;\n                this.loader = false;\n              }\n            });\n          }\n        },\n        (err) => {\n          console.log(err);\n          this.loader = false;\n          console.log('sorry!....');\n        }\n      )\n    );\n  }\n\n  onScroll() {\n    this.imageService\n      .getImage(++this.page)\n      .subscribe((items: Photo[] | any) => {\n        this.displayitems.push(...items);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.setImages.map((s) => s.unsubscribe());\n  }\n}\n","<div infiniteScroll [infiniteScrollDistance]=\"3\" [infiniteScrollThrottle]=\"50\" (scrolled)=\"onScroll()\">\n<app-images\n  [photodata]=\"displayitems\"\n></app-images>\n</div>\n<div class=\"button-random\">\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-primary\"\n    [routerLink]=\"['/random']\"\n    routerLinkActive=\"active\"\n  >\n    Get Random Images\n  </button>\n</div>\n\n\n\n\n"],"sourceRoot":"webpack:///"}