{"version":3,"sources":["./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/environments/environment.ts","./src/app/shared/images/images.component.html","./src/app/shared/images/images.component.ts","./src/app/service/image.service.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/component.module.ts","./src/app/core/core.module.ts","./src/app/app-routing.module.ts","./src/app/component/random-images/random-images.component.html","./src/app/component/random-images/random-images.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/component/gallery/gallery.component.ts","./src/app/component/gallery/gallery.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<Header class=\"header\">\r\n  <a class=\"header__title\" href=\"/\">\r\n    <img src=\"../../../assets/img/logo.png\" alt=\"logo\" />\r\n  </a>\r\n  <p class=\"header__subtitle\">The internetâ€™s source of freely usable images.</p>\r\n  <p class=\"header__subtitle\">Powered by creators everywhere.</p>\r\n</Header>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api:\"mId7crrR2v5C0NQi-yzIq8XMY5g9tTKN02-ix0cH0FE\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"image-section\">\r\n  <ngx-masonry\r\n    class=\"image-container\"\r\n    [options]=\"masonryOptions\"\r\n    [ordered]=\"true\"\r\n  >\r\n    <div\r\n      ngxMasonryItem\r\n      *ngFor=\"let d of photodata\"\r\n      class=\"image-container__items\"\r\n    >\r\n      <img [src]=\"d.urls.regular\" />\r\n    </div>\r\n  </ngx-masonry>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgxMasonryOptions } from 'ngx-masonry';\r\n\r\n@Component({\r\n  selector: 'app-images',\r\n  templateUrl: './images.component.html',\r\n  styleUrls: ['./images.component.scss'],\r\n})\r\nexport class ImagesComponent implements OnInit {\r\n  @Input() photodata: any;\r\n\r\n  public masonryOptions: NgxMasonryOptions = {\r\n    gutter: 35,\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Photo } from '../model/photo';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImageService {\r\n  private Api_key = environment.api;\r\n  private Base_Url = 'https://api.unsplash.com/';\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  getImage(page: any): Observable<Photo[]> {\r\n    return this._http\r\n      .get<Photo[]>(\r\n        `${this.Base_Url}photos//?page=${page}&per_page=10&client_id=${this.Api_key}`\r\n      )\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  searchPhotos(query: any, page: any): Observable<Photo[]> {\r\n    return this._http\r\n      .get<Photo[]>(\r\n        `${this.Base_Url}/search/photos/?query=${query}&page=${page}&per_page=10&client_id=${this.Api_key}`\r\n      )\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\r\n      );\r\n    }\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImagesComponent } from './images/images.component';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImagesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgxMasonryModule,\r\n    FormsModule,\r\n\r\n  ],\r\n  exports: [ImagesComponent],\r\n})\r\nexport class SharedModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'ng-images-masonry';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ComponentModule } from './component/component.module';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ImageService } from './service/image.service';\r\nimport { CoreModule } from './core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    ComponentModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule\r\n  ],\r\n  providers: [ImageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GalleryComponent } from './gallery/gallery.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {RouterModule} from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RandomImagesComponent } from './random-images/random-images.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxMasonryModule } from 'ngx-masonry';\r\n\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GalleryComponent,\r\n    RandomImagesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    NgxMasonryModule,\r\n    InfiniteScrollModule\r\n\r\n  ]\r\n})\r\nexport class ComponentModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports:[\r\n    HeaderComponent\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GalleryComponent } from './component/gallery/gallery.component';\r\nimport { RandomImagesComponent } from './component/random-images/random-images.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'gallery', pathMatch: 'full' },\r\n  { path: 'gallery', component: GalleryComponent },\r\n  { path: 'random', component: RandomImagesComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","<div action=\"\" class=\"search\">\r\n  <input\r\n    class=\"search__input\"\r\n    (keyup)=\"keyUp($event)\"\r\n    type=\"text\"\r\n    placeholder=\"Search Random Images\"\r\n    id=\"search\"\r\n    [(ngModel)]=\"searchInputQuery\"\r\n    autocomplete=\"off\"\r\n  />\r\n</div>\r\n<div (click)=\"displayitems = []; searchImagesData(searchInputQuery, 1)\"></div>\r\n\r\n<div class=\"image-section\">\r\n  <ngx-masonry\r\n    class=\"image-container\"\r\n    [options]=\"masonryOptions\"\r\n    [ordered]=\"true\"\r\n  >\r\n    <div\r\n      ngxMasonryItem\r\n      *ngFor=\"let photo of displayitems\"\r\n      class=\"image-container__items\"\r\n    >\r\n      <img [src]=\"photo.urls.small\" />\r\n    </div>\r\n  </ngx-masonry>\r\n</div>\r\n<div *ngIf=\"loader\" style=\"text-align: center; color: greenyellow\">\r\n  Loading....\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgxMasonryOptions } from 'ngx-masonry';\r\nimport { Photo } from 'src/app/model/photo';\r\nimport { ImageService } from 'src/app/service/image.service';\r\n\r\n@Component({\r\n  selector: 'app-random-images',\r\n  templateUrl: './random-images.component.html',\r\n  styleUrls: ['./random-images.component.scss'],\r\n})\r\nexport class RandomImagesComponent implements OnInit {\r\n  loader!: Boolean;\r\n  eventValue: Boolean = true;\r\n  displayitems: Photo[] | any[] = [];\r\n  searchInputQuery: String[] = [];\r\n\r\n  public masonryOptions: NgxMasonryOptions = {\r\n      gutter: 35,\r\n    };\r\n\r\n  constructor(private imageService: ImageService) {}\r\n\r\n\r\n  ngOnInit(): void {}\r\n\r\n  searchImagesData(query: any, page: number) {\r\n    this.loader = true;\r\n    this.imageService.searchPhotos(query, page).subscribe(\r\n      (res: any) => {\r\n        let itemsProcessed = 0;\r\n        if (res.results.length == 0) {\r\n          this.loader = false;\r\n        } else {\r\n          res.results.forEach((e: any) => {\r\n            this.displayitems.push(e);\r\n            itemsProcessed++;\r\n            if (itemsProcessed === res.results.length) {\r\n              this.eventValue = true;\r\n              this.loader = false;\r\n            }\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        this.loader = false;\r\n        console.log(err);\r\n        console.log('sorry!....');\r\n      }\r\n    );\r\n  }\r\n\r\n  keyUp(e: any) {\r\n    if (e.keyCode == 13) {\r\n      this.displayitems = [];\r\n      this.searchImagesData(this.searchInputQuery, 1);\r\n    }\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Photo } from 'src/app/model/photo';\r\nimport { ImageService } from 'src/app/service/image.service';\r\n\r\n@Component({\r\n  selector: 'app-gallery',\r\n  templateUrl: './gallery.component.html',\r\n  styleUrls: ['./gallery.component.scss'],\r\n})\r\nexport class GalleryComponent implements OnInit, OnDestroy {\r\n  setImages: Subscription[] = [];\r\n  displayitems: Photo[] | any[] = [];\r\n  loader!: Boolean;\r\n  eventValue: Boolean = true;\r\n  distance = 2;\r\n  throttle = 75;\r\n  page = 1;\r\n\r\n  constructor(private imageService: ImageService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchImagesData(1);\r\n  }\r\n\r\n  fetchImagesData(page: number) {\r\n    this.setImages.push(\r\n      this.imageService.getImage(page).subscribe(\r\n        (res: any) => {\r\n          if (res.length == 0) {\r\n            this.loader = false;\r\n          } else {\r\n            let processesPhotos = 0;\r\n            res.forEach((e: any) => {\r\n              this.displayitems.push(e);\r\n              processesPhotos++;\r\n              if (processesPhotos === res.length) {\r\n                this.eventValue = true;\r\n                this.loader = false;\r\n              }\r\n            });\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.loader = false;\r\n          console.log('sorry!....');\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  onScroll(): void {\r\n    this.imageService.getImage(++this.page).subscribe((items: Photo[]) => {\r\n      this.displayitems.push(...items);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.setImages.map((s) => s.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"button-random\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-outline-primary\"\r\n    [routerLink]=\"['/random']\"\r\n    routerLinkActive=\"active\"\r\n  >\r\n    Get Random Images\r\n  </button>\r\n</div>\r\n<div\r\n  infiniteScroll\r\n  [infiniteScrollDistance]=\"3\"\r\n  [infiniteScrollThrottle]=\"50\"\r\n  (scrolled)=\"onScroll()\"\r\n>\r\n  <app-images [photodata]=\"displayitems\"></app-images>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}